// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_0_v_hscaler_0_v_hscaler_MultiPixStream2AXIvideo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        StrmMPix_V_val_V_dout,
        StrmMPix_V_val_V_empty_n,
        StrmMPix_V_val_V_read,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        Height_dout,
        Height_empty_n,
        Height_read,
        WidthOut_dout,
        WidthOut_empty_n,
        WidthOut_read,
        ColorMode_dout,
        ColorMode_empty_n,
        ColorMode_read
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b1;
parameter    ap_ST_st2_fsm_1 = 5'b10;
parameter    ap_ST_st3_fsm_2 = 5'b100;
parameter    ap_ST_st4_fsm_3 = 5'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 5'b10000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_FFF = 12'b111111111111;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv6_F = 6'b1111;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv6_17 = 6'b10111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] StrmMPix_V_val_V_dout;
input   StrmMPix_V_val_V_empty_n;
output   StrmMPix_V_val_V_read;
output  [23:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input  [15:0] Height_dout;
input   Height_empty_n;
output   Height_read;
input  [15:0] WidthOut_dout;
input   WidthOut_empty_n;
output   WidthOut_read;
input  [7:0] ColorMode_dout;
input   ColorMode_empty_n;
output   ColorMode_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg StrmMPix_V_val_V_read;
reg Height_read;
reg WidthOut_read;
reg ColorMode_read;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm = 5'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
reg   [23:0] AXI_video_strm_V_data_V_1_data_out;
reg    AXI_video_strm_V_data_V_1_vld_in;
wire    AXI_video_strm_V_data_V_1_vld_out;
wire    AXI_video_strm_V_data_V_1_ack_in;
wire    AXI_video_strm_V_data_V_1_ack_out;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_A;
reg   [23:0] AXI_video_strm_V_data_V_1_payload_B;
reg    AXI_video_strm_V_data_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_data_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_data_V_1_sel;
wire    AXI_video_strm_V_data_V_1_load_A;
wire    AXI_video_strm_V_data_V_1_load_B;
reg   [1:0] AXI_video_strm_V_data_V_1_state = 2'b00;
wire    AXI_video_strm_V_data_V_1_state_cmp_full;
wire   [2:0] AXI_video_strm_V_keep_V_1_data_in;
reg   [2:0] AXI_video_strm_V_keep_V_1_data_out;
reg    AXI_video_strm_V_keep_V_1_vld_in;
wire    AXI_video_strm_V_keep_V_1_vld_out;
wire    AXI_video_strm_V_keep_V_1_ack_in;
wire    AXI_video_strm_V_keep_V_1_ack_out;
reg   [2:0] AXI_video_strm_V_keep_V_1_payload_A;
reg   [2:0] AXI_video_strm_V_keep_V_1_payload_B;
reg    AXI_video_strm_V_keep_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_keep_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_keep_V_1_sel;
wire    AXI_video_strm_V_keep_V_1_load_A;
wire    AXI_video_strm_V_keep_V_1_load_B;
reg   [1:0] AXI_video_strm_V_keep_V_1_state = 2'b00;
wire    AXI_video_strm_V_keep_V_1_state_cmp_full;
wire   [2:0] AXI_video_strm_V_strb_V_1_data_in;
reg   [2:0] AXI_video_strm_V_strb_V_1_data_out;
reg    AXI_video_strm_V_strb_V_1_vld_in;
wire    AXI_video_strm_V_strb_V_1_vld_out;
wire    AXI_video_strm_V_strb_V_1_ack_in;
wire    AXI_video_strm_V_strb_V_1_ack_out;
reg   [2:0] AXI_video_strm_V_strb_V_1_payload_A;
reg   [2:0] AXI_video_strm_V_strb_V_1_payload_B;
reg    AXI_video_strm_V_strb_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_strb_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_strb_V_1_sel;
wire    AXI_video_strm_V_strb_V_1_load_A;
wire    AXI_video_strm_V_strb_V_1_load_B;
reg   [1:0] AXI_video_strm_V_strb_V_1_state = 2'b00;
wire    AXI_video_strm_V_strb_V_1_state_cmp_full;
reg   [0:0] AXI_video_strm_V_user_V_1_data_out;
reg    AXI_video_strm_V_user_V_1_vld_in;
wire    AXI_video_strm_V_user_V_1_vld_out;
wire    AXI_video_strm_V_user_V_1_ack_in;
wire    AXI_video_strm_V_user_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_user_V_1_payload_B;
reg    AXI_video_strm_V_user_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_user_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_user_V_1_sel;
wire    AXI_video_strm_V_user_V_1_load_A;
wire    AXI_video_strm_V_user_V_1_load_B;
reg   [1:0] AXI_video_strm_V_user_V_1_state = 2'b00;
wire    AXI_video_strm_V_user_V_1_state_cmp_full;
reg   [0:0] AXI_video_strm_V_last_V_1_data_out;
reg    AXI_video_strm_V_last_V_1_vld_in;
wire    AXI_video_strm_V_last_V_1_vld_out;
wire    AXI_video_strm_V_last_V_1_ack_in;
wire    AXI_video_strm_V_last_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_last_V_1_payload_B;
reg    AXI_video_strm_V_last_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_last_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_last_V_1_sel;
wire    AXI_video_strm_V_last_V_1_load_A;
wire    AXI_video_strm_V_last_V_1_load_B;
reg   [1:0] AXI_video_strm_V_last_V_1_state = 2'b00;
wire    AXI_video_strm_V_last_V_1_state_cmp_full;
wire   [0:0] AXI_video_strm_V_id_V_1_data_in;
reg   [0:0] AXI_video_strm_V_id_V_1_data_out;
reg    AXI_video_strm_V_id_V_1_vld_in;
wire    AXI_video_strm_V_id_V_1_vld_out;
wire    AXI_video_strm_V_id_V_1_ack_in;
wire    AXI_video_strm_V_id_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_id_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_id_V_1_payload_B;
reg    AXI_video_strm_V_id_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_id_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_id_V_1_sel;
wire    AXI_video_strm_V_id_V_1_load_A;
wire    AXI_video_strm_V_id_V_1_load_B;
reg   [1:0] AXI_video_strm_V_id_V_1_state = 2'b00;
wire    AXI_video_strm_V_id_V_1_state_cmp_full;
wire   [0:0] AXI_video_strm_V_dest_V_1_data_in;
reg   [0:0] AXI_video_strm_V_dest_V_1_data_out;
reg    AXI_video_strm_V_dest_V_1_vld_in;
wire    AXI_video_strm_V_dest_V_1_vld_out;
wire    AXI_video_strm_V_dest_V_1_ack_in;
wire    AXI_video_strm_V_dest_V_1_ack_out;
reg   [0:0] AXI_video_strm_V_dest_V_1_payload_A;
reg   [0:0] AXI_video_strm_V_dest_V_1_payload_B;
reg    AXI_video_strm_V_dest_V_1_sel_rd = 1'b0;
reg    AXI_video_strm_V_dest_V_1_sel_wr = 1'b0;
wire    AXI_video_strm_V_dest_V_1_sel;
wire    AXI_video_strm_V_dest_V_1_load_A;
wire    AXI_video_strm_V_dest_V_1_load_B;
reg   [1:0] AXI_video_strm_V_dest_V_1_state = 2'b00;
wire    AXI_video_strm_V_dest_V_1_state_cmp_full;
wire   [3:0] mapComp_address0;
reg    mapComp_ce0;
wire   [1:0] mapComp_q0;
reg   [11:0] j_i_reg_234;
reg   [15:0] Height_read_reg_494;
reg    ap_sig_bdd_474;
wire   [11:0] tmp_25_fu_245_p1;
reg   [11:0] tmp_25_reg_499;
wire   [12:0] tmp_26_fu_249_p1;
reg   [12:0] tmp_26_reg_504;
wire   [4:0] tmp_7_fu_269_p2;
reg   [4:0] tmp_7_reg_509;
wire   [1:0] i_fu_281_p2;
reg   [1:0] i_reg_517;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_490;
wire   [0:0] exitcond9_i_fu_275_p2;
wire   [12:0] tmp_29_fu_301_p1;
reg   [12:0] tmp_29_reg_534;
wire   [11:0] tmp_50_i_fu_304_p2;
reg   [11:0] tmp_50_i_reg_539;
wire   [1:0] tmp_30_fu_309_p1;
reg   [1:0] tmp_30_reg_544;
wire   [1:0] tmp_31_fu_313_p1;
reg   [1:0] tmp_31_reg_549;
wire   [1:0] tmp_32_fu_317_p1;
reg   [1:0] tmp_32_reg_554;
wire   [3:0] map_2_V_1_fu_350_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_516;
wire   [3:0] map_2_V_3_fu_366_p3;
wire   [3:0] map_2_V_5_fu_374_p3;
wire   [0:0] exitcond_i_fu_386_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_529;
reg    ap_sig_bdd_544;
wire   [11:0] i_1_fu_391_p2;
reg   [11:0] i_1_reg_578;
wire   [0:0] exitcond1_i_fu_401_p2;
reg   [0:0] exitcond1_i_reg_583;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_558;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_565;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [11:0] j_fu_406_p2;
wire   [0:0] axi_last_V_fu_412_p2;
reg   [0:0] axi_last_V_reg_592;
wire   [23:0] tmp_data_V_fu_478_p4;
reg   [3:0] map_V_2_i_reg_175;
reg   [3:0] map_V_1_i_reg_187;
reg   [3:0] map_2_V_4_reg_199;
reg   [1:0] i_i_reg_211;
reg   [11:0] i1_i_reg_223;
wire  signed [63:0] tmp_8_cast_fu_296_p1;
reg   [0:0] tmp_user_V_fu_106;
wire   [2:0] tmp_28_fu_257_p1;
wire   [4:0] p_shl_cast_fu_261_p3;
wire   [4:0] tmp_27_fu_253_p1;
wire   [4:0] tmp_51_i_cast_fu_287_p1;
wire   [4:0] tmp_8_fu_291_p2;
wire   [0:0] sel_tmp_fu_330_p2;
wire   [3:0] map_0_V_cast_fu_326_p1;
wire   [0:0] sel_tmp2_fu_344_p2;
wire   [3:0] map_2_V_fu_336_p3;
wire   [3:0] map_2_V_2_fu_358_p3;
wire   [12:0] i1_cast_i_fu_382_p1;
wire   [12:0] j_cast_i_fu_397_p1;
wire   [7:0] pix_val_0_V_fu_421_p1;
wire   [7:0] pix_val_1_V_fu_425_p4;
wire   [7:0] pix_val_2_V_fu_435_p4;
wire   [7:0] tmp_2_fu_467_p5;
wire   [7:0] tmp_s_fu_456_p5;
wire   [7:0] tmp_fu_445_p5;
reg   [4:0] ap_NS_fsm;


bd_0_v_hscaler_0_v_hscaler_MultiPixStream2AXIvideo_mapComp #(
    .DataWidth( 2 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
mapComp_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( mapComp_address0 ),
    .ce0( mapComp_ce0 ),
    .q0( mapComp_q0 )
);

bd_0_v_hscaler_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U112(
    .din1( pix_val_0_V_fu_421_p1 ),
    .din2( pix_val_1_V_fu_425_p4 ),
    .din3( pix_val_2_V_fu_435_p4 ),
    .din4( tmp_30_reg_544 ),
    .dout( tmp_fu_445_p5 )
);

bd_0_v_hscaler_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U113(
    .din1( pix_val_0_V_fu_421_p1 ),
    .din2( pix_val_1_V_fu_425_p4 ),
    .din3( pix_val_2_V_fu_435_p4 ),
    .din4( tmp_31_reg_549 ),
    .dout( tmp_s_fu_456_p5 )
);

bd_0_v_hscaler_0_v_hscaler_mux_3to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
v_hscaler_mux_3to1_sel2_8_1_U114(
    .din1( pix_val_0_V_fu_421_p1 ),
    .din2( pix_val_1_V_fu_425_p4 ),
    .din3( pix_val_2_V_fu_435_p4 ),
    .din4( tmp_32_reg_554 ),
    .dout( tmp_2_fu_467_p5 )
);



always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_data_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_data_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_data_V_1_vld_out))) begin
            AXI_video_strm_V_data_V_1_sel_rd <= ~AXI_video_strm_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_data_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_data_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_data_V_1_ack_in))) begin
            AXI_video_strm_V_data_V_1_sel_wr <= ~AXI_video_strm_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_data_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_data_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_data_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_3)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_data_V_1_vld_in) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_2)) | ((ap_const_logic_1 == AXI_video_strm_V_data_V_1_ack_out) & (AXI_video_strm_V_data_V_1_state == ap_const_lv2_1)) | ((AXI_video_strm_V_data_V_1_state == ap_const_lv2_3) & ~((ap_const_logic_1 == AXI_video_strm_V_data_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_data_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_data_V_1_ack_out))))) begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_dest_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_dest_V_1_vld_out))) begin
            AXI_video_strm_V_dest_V_1_sel_rd <= ~AXI_video_strm_V_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_dest_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_dest_V_1_ack_in))) begin
            AXI_video_strm_V_dest_V_1_sel_wr <= ~AXI_video_strm_V_dest_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_dest_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_dest_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_dest_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_dest_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_dest_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_dest_V_1_ack_out))))) begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_id_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_id_V_1_vld_out))) begin
            AXI_video_strm_V_id_V_1_sel_rd <= ~AXI_video_strm_V_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_id_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_id_V_1_ack_in))) begin
            AXI_video_strm_V_id_V_1_sel_wr <= ~AXI_video_strm_V_id_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_id_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_id_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_id_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_id_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_id_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_id_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_id_V_1_ack_out))))) begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_keep_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_keep_V_1_vld_out))) begin
            AXI_video_strm_V_keep_V_1_sel_rd <= ~AXI_video_strm_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_keep_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_keep_V_1_ack_in))) begin
            AXI_video_strm_V_keep_V_1_sel_wr <= ~AXI_video_strm_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_keep_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_keep_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_keep_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_keep_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_keep_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_keep_V_1_ack_out))))) begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_last_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_last_V_1_vld_out))) begin
            AXI_video_strm_V_last_V_1_sel_rd <= ~AXI_video_strm_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_last_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_last_V_1_ack_in))) begin
            AXI_video_strm_V_last_V_1_sel_wr <= ~AXI_video_strm_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_last_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_last_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_last_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_last_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_last_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_last_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_last_V_1_ack_out))))) begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_strb_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_strb_V_1_vld_out))) begin
            AXI_video_strm_V_strb_V_1_sel_rd <= ~AXI_video_strm_V_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_strb_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_strb_V_1_ack_in))) begin
            AXI_video_strm_V_strb_V_1_sel_wr <= ~AXI_video_strm_V_strb_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_strb_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_strb_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_strb_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_strb_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_strb_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_strb_V_1_ack_out))))) begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_user_V_1_sel_rd
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_rd <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_logic_1 == AXI_video_strm_V_user_V_1_vld_out))) begin
            AXI_video_strm_V_user_V_1_sel_rd <= ~AXI_video_strm_V_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_user_V_1_sel_wr
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_sel_wr <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_user_V_1_ack_in))) begin
            AXI_video_strm_V_user_V_1_sel_wr <= ~AXI_video_strm_V_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_AXI_video_strm_V_user_V_1_state
    if (ap_rst == 1'b1) begin
        AXI_video_strm_V_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((ap_const_logic_0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_logic_0 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_1;
        end else if ((((ap_const_logic_1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_lv2_2 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_logic_1 == AXI_video_strm_V_user_V_1_ack_out) & (ap_const_lv2_1 == AXI_video_strm_V_user_V_1_state)) | ((ap_const_lv2_3 == AXI_video_strm_V_user_V_1_state) & ~((ap_const_logic_1 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_logic_0 == AXI_video_strm_V_user_V_1_ack_out)) & ~((ap_const_logic_0 == AXI_video_strm_V_user_V_1_vld_in) & (ap_const_logic_1 == AXI_video_strm_V_user_V_1_ack_out))))) begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_3;
        end else begin
            AXI_video_strm_V_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond1_i_fu_401_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond1_i_fu_401_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond1_i_fu_401_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond1_i_fu_401_p2))) begin
        i1_i_reg_223 <= i_1_reg_578;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond9_i_fu_275_p2))) begin
        i1_i_reg_223 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_i_reg_211 <= i_reg_517;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_474)) begin
        i_i_reg_211 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
        j_i_reg_234 <= ap_const_lv12_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond1_i_fu_401_p2))) begin
        j_i_reg_234 <= j_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        tmp_user_V_fu_106 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond9_i_fu_275_p2))) begin
        tmp_user_V_fu_106 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_data_V_1_load_A)) begin
        AXI_video_strm_V_data_V_1_payload_A <= tmp_data_V_fu_478_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_data_V_1_load_B)) begin
        AXI_video_strm_V_data_V_1_payload_B <= tmp_data_V_fu_478_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_load_A)) begin
        AXI_video_strm_V_dest_V_1_payload_A <= AXI_video_strm_V_dest_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_load_B)) begin
        AXI_video_strm_V_dest_V_1_payload_B <= AXI_video_strm_V_dest_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_id_V_1_load_A)) begin
        AXI_video_strm_V_id_V_1_payload_A <= AXI_video_strm_V_id_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_id_V_1_load_B)) begin
        AXI_video_strm_V_id_V_1_payload_B <= AXI_video_strm_V_id_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_load_A)) begin
        AXI_video_strm_V_keep_V_1_payload_A <= AXI_video_strm_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_load_B)) begin
        AXI_video_strm_V_keep_V_1_payload_B <= AXI_video_strm_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_last_V_1_load_A)) begin
        AXI_video_strm_V_last_V_1_payload_A <= axi_last_V_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_last_V_1_load_B)) begin
        AXI_video_strm_V_last_V_1_payload_B <= axi_last_V_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_load_A)) begin
        AXI_video_strm_V_strb_V_1_payload_A <= AXI_video_strm_V_strb_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_load_B)) begin
        AXI_video_strm_V_strb_V_1_payload_B <= AXI_video_strm_V_strb_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_user_V_1_load_A)) begin
        AXI_video_strm_V_user_V_1_payload_A <= tmp_user_V_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_user_V_1_load_B)) begin
        AXI_video_strm_V_user_V_1_payload_B <= tmp_user_V_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_474)) begin
        Height_read_reg_494 <= Height_dout;
        tmp_25_reg_499 <= tmp_25_fu_245_p1;
        tmp_26_reg_504 <= tmp_26_fu_249_p1;
        tmp_7_reg_509 <= tmp_7_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 <= exitcond1_i_reg_583;
        exitcond1_i_reg_583 <= exitcond1_i_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & (ap_const_lv1_0 == exitcond1_i_fu_401_p2))) begin
        axi_last_V_reg_592 <= axi_last_V_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~ap_sig_bdd_544)) begin
        i_1_reg_578 <= i_1_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_reg_517 <= i_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        map_2_V_4_reg_199 <= map_2_V_5_fu_374_p3;
        map_V_1_i_reg_187 <= map_2_V_3_fu_366_p3;
        map_V_2_i_reg_175 <= map_2_V_1_fu_350_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond9_i_fu_275_p2))) begin
        tmp_29_reg_534 <= tmp_29_fu_301_p1;
        tmp_30_reg_544 <= tmp_30_fu_309_p1;
        tmp_31_reg_549 <= tmp_31_fu_313_p1;
        tmp_32_reg_554 <= tmp_32_fu_317_p1;
        tmp_50_i_reg_539 <= tmp_50_i_fu_304_p2;
    end
end

always @ (AXI_video_strm_V_data_V_1_payload_A or AXI_video_strm_V_data_V_1_payload_B or AXI_video_strm_V_data_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_data_V_1_sel)) begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_B;
    end else begin
        AXI_video_strm_V_data_V_1_data_out = AXI_video_strm_V_data_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_data_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_data_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_dest_V_1_payload_A or AXI_video_strm_V_dest_V_1_payload_B or AXI_video_strm_V_dest_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_dest_V_1_sel)) begin
        AXI_video_strm_V_dest_V_1_data_out = AXI_video_strm_V_dest_V_1_payload_B;
    end else begin
        AXI_video_strm_V_dest_V_1_data_out = AXI_video_strm_V_dest_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_dest_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_dest_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_id_V_1_payload_A or AXI_video_strm_V_id_V_1_payload_B or AXI_video_strm_V_id_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_id_V_1_sel)) begin
        AXI_video_strm_V_id_V_1_data_out = AXI_video_strm_V_id_V_1_payload_B;
    end else begin
        AXI_video_strm_V_id_V_1_data_out = AXI_video_strm_V_id_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_id_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_id_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_keep_V_1_payload_A or AXI_video_strm_V_keep_V_1_payload_B or AXI_video_strm_V_keep_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_keep_V_1_sel)) begin
        AXI_video_strm_V_keep_V_1_data_out = AXI_video_strm_V_keep_V_1_payload_B;
    end else begin
        AXI_video_strm_V_keep_V_1_data_out = AXI_video_strm_V_keep_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_keep_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_keep_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_last_V_1_payload_A or AXI_video_strm_V_last_V_1_payload_B or AXI_video_strm_V_last_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_last_V_1_sel)) begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_B;
    end else begin
        AXI_video_strm_V_last_V_1_data_out = AXI_video_strm_V_last_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_last_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_last_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_strb_V_1_payload_A or AXI_video_strm_V_strb_V_1_payload_B or AXI_video_strm_V_strb_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_strb_V_1_sel)) begin
        AXI_video_strm_V_strb_V_1_data_out = AXI_video_strm_V_strb_V_1_payload_B;
    end else begin
        AXI_video_strm_V_strb_V_1_data_out = AXI_video_strm_V_strb_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_strb_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_strb_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_user_V_1_payload_A or AXI_video_strm_V_user_V_1_payload_B or AXI_video_strm_V_user_V_1_sel) begin
    if ((ap_const_logic_1 == AXI_video_strm_V_user_V_1_sel)) begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_B;
    end else begin
        AXI_video_strm_V_user_V_1_data_out = AXI_video_strm_V_user_V_1_payload_A;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        AXI_video_strm_V_user_V_1_vld_in = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_user_V_1_vld_in = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_474) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_474)) begin
        ColorMode_read = ap_const_logic_1;
    end else begin
        ColorMode_read = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_474) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_474)) begin
        Height_read = ap_const_logic_1;
    end else begin
        Height_read = ap_const_logic_0;
    end
end

always @ (AXI_video_strm_V_data_V_1_ack_in or exitcond1_i_reg_583 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))))) begin
        StrmMPix_V_val_V_read = ap_const_logic_1;
    end else begin
        StrmMPix_V_val_V_read = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_474) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_474)) begin
        WidthOut_read = ap_const_logic_1;
    end else begin
        WidthOut_read = ap_const_logic_0;
    end
end

always @ (ap_done_reg or exitcond_i_fu_386_p2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_544) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (exitcond_i_fu_386_p2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_bdd_544) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_558) begin
    if (ap_sig_bdd_558) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_24) begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_490) begin
    if (ap_sig_bdd_490) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_516) begin
    if (ap_sig_bdd_516) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_529) begin
    if (ap_sig_bdd_529) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mapComp_ce0 = ap_const_logic_1;
    end else begin
        mapComp_ce0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or AXI_video_strm_V_data_V_1_ack_in or ap_sig_bdd_474 or exitcond9_i_fu_275_p2 or exitcond_i_fu_386_p2 or ap_sig_bdd_544 or exitcond1_i_fu_401_p2 or exitcond1_i_reg_583 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_565 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1 or ap_reg_ppiten_pp0_it2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_474) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond9_i_fu_275_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((~(ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((ap_const_lv1_0 == exitcond_i_fu_386_p2) & ~ap_sig_bdd_544)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond1_i_fu_401_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(((ap_sig_bdd_565 | ((ap_const_lv1_0 == exitcond1_i_reg_583) & (ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in))) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_0 == AXI_video_strm_V_data_V_1_ack_in) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_reg_583_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) & ~(ap_const_lv1_0 == exitcond1_i_fu_401_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign AXI_video_strm_V_data_V_1_ack_in = AXI_video_strm_V_data_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_data_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_data_V_1_load_A = (AXI_video_strm_V_data_V_1_state_cmp_full & ~AXI_video_strm_V_data_V_1_sel_wr);

assign AXI_video_strm_V_data_V_1_load_B = (AXI_video_strm_V_data_V_1_sel_wr & AXI_video_strm_V_data_V_1_state_cmp_full);

assign AXI_video_strm_V_data_V_1_sel = AXI_video_strm_V_data_V_1_sel_rd;

assign AXI_video_strm_V_data_V_1_state_cmp_full = (AXI_video_strm_V_data_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_data_V_1_vld_out = AXI_video_strm_V_data_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_dest_V_1_ack_in = AXI_video_strm_V_dest_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_dest_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_dest_V_1_data_in = ap_const_lv1_0;

assign AXI_video_strm_V_dest_V_1_load_A = (AXI_video_strm_V_dest_V_1_state_cmp_full & ~AXI_video_strm_V_dest_V_1_sel_wr);

assign AXI_video_strm_V_dest_V_1_load_B = (AXI_video_strm_V_dest_V_1_sel_wr & AXI_video_strm_V_dest_V_1_state_cmp_full);

assign AXI_video_strm_V_dest_V_1_sel = AXI_video_strm_V_dest_V_1_sel_rd;

assign AXI_video_strm_V_dest_V_1_state_cmp_full = (AXI_video_strm_V_dest_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_dest_V_1_vld_out = AXI_video_strm_V_dest_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_id_V_1_ack_in = AXI_video_strm_V_id_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_id_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_id_V_1_data_in = ap_const_lv1_0;

assign AXI_video_strm_V_id_V_1_load_A = (AXI_video_strm_V_id_V_1_state_cmp_full & ~AXI_video_strm_V_id_V_1_sel_wr);

assign AXI_video_strm_V_id_V_1_load_B = (AXI_video_strm_V_id_V_1_sel_wr & AXI_video_strm_V_id_V_1_state_cmp_full);

assign AXI_video_strm_V_id_V_1_sel = AXI_video_strm_V_id_V_1_sel_rd;

assign AXI_video_strm_V_id_V_1_state_cmp_full = (AXI_video_strm_V_id_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_id_V_1_vld_out = AXI_video_strm_V_id_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_keep_V_1_ack_in = AXI_video_strm_V_keep_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_keep_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_keep_V_1_data_in = ap_const_lv3_7;

assign AXI_video_strm_V_keep_V_1_load_A = (AXI_video_strm_V_keep_V_1_state_cmp_full & ~AXI_video_strm_V_keep_V_1_sel_wr);

assign AXI_video_strm_V_keep_V_1_load_B = (AXI_video_strm_V_keep_V_1_sel_wr & AXI_video_strm_V_keep_V_1_state_cmp_full);

assign AXI_video_strm_V_keep_V_1_sel = AXI_video_strm_V_keep_V_1_sel_rd;

assign AXI_video_strm_V_keep_V_1_state_cmp_full = (AXI_video_strm_V_keep_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_keep_V_1_vld_out = AXI_video_strm_V_keep_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_last_V_1_ack_in = AXI_video_strm_V_last_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_last_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_last_V_1_load_A = (AXI_video_strm_V_last_V_1_state_cmp_full & ~AXI_video_strm_V_last_V_1_sel_wr);

assign AXI_video_strm_V_last_V_1_load_B = (AXI_video_strm_V_last_V_1_sel_wr & AXI_video_strm_V_last_V_1_state_cmp_full);

assign AXI_video_strm_V_last_V_1_sel = AXI_video_strm_V_last_V_1_sel_rd;

assign AXI_video_strm_V_last_V_1_state_cmp_full = (AXI_video_strm_V_last_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_last_V_1_vld_out = AXI_video_strm_V_last_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_strb_V_1_ack_in = AXI_video_strm_V_strb_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_strb_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_strb_V_1_data_in = ap_const_lv3_0;

assign AXI_video_strm_V_strb_V_1_load_A = (AXI_video_strm_V_strb_V_1_state_cmp_full & ~AXI_video_strm_V_strb_V_1_sel_wr);

assign AXI_video_strm_V_strb_V_1_load_B = (AXI_video_strm_V_strb_V_1_sel_wr & AXI_video_strm_V_strb_V_1_state_cmp_full);

assign AXI_video_strm_V_strb_V_1_sel = AXI_video_strm_V_strb_V_1_sel_rd;

assign AXI_video_strm_V_strb_V_1_state_cmp_full = (AXI_video_strm_V_strb_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_strb_V_1_vld_out = AXI_video_strm_V_strb_V_1_state[ap_const_lv1_0];

assign AXI_video_strm_V_user_V_1_ack_in = AXI_video_strm_V_user_V_1_state[ap_const_lv1_1];

assign AXI_video_strm_V_user_V_1_ack_out = m_axis_video_TREADY;

assign AXI_video_strm_V_user_V_1_load_A = (AXI_video_strm_V_user_V_1_state_cmp_full & ~AXI_video_strm_V_user_V_1_sel_wr);

assign AXI_video_strm_V_user_V_1_load_B = (AXI_video_strm_V_user_V_1_sel_wr & AXI_video_strm_V_user_V_1_state_cmp_full);

assign AXI_video_strm_V_user_V_1_sel = AXI_video_strm_V_user_V_1_sel_rd;

assign AXI_video_strm_V_user_V_1_state_cmp_full = (AXI_video_strm_V_user_V_1_state != ap_const_lv2_1? 1'b1: 1'b0);

assign AXI_video_strm_V_user_V_1_vld_out = AXI_video_strm_V_user_V_1_state[ap_const_lv1_0];


always @ (ap_CS_fsm) begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_start or ap_done_reg or Height_empty_n or WidthOut_empty_n or ColorMode_empty_n) begin
    ap_sig_bdd_474 = ((Height_empty_n == ap_const_logic_0) | (WidthOut_empty_n == ap_const_logic_0) | (ColorMode_empty_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_490 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_516 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_529 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (AXI_video_strm_V_data_V_1_ack_in or AXI_video_strm_V_keep_V_1_ack_in or AXI_video_strm_V_strb_V_1_ack_in or AXI_video_strm_V_user_V_1_ack_in or AXI_video_strm_V_last_V_1_ack_in or AXI_video_strm_V_id_V_1_ack_in or AXI_video_strm_V_dest_V_1_ack_in) begin
    ap_sig_bdd_544 = ((AXI_video_strm_V_data_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_keep_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_strb_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_user_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_last_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_id_V_1_ack_in == ap_const_logic_0) | (AXI_video_strm_V_dest_V_1_ack_in == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_558 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (StrmMPix_V_val_V_empty_n or exitcond1_i_reg_583) begin
    ap_sig_bdd_565 = ((StrmMPix_V_val_V_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_i_reg_583));
end

assign axi_last_V_fu_412_p2 = (j_i_reg_234 == tmp_50_i_reg_539? 1'b1: 1'b0);

assign exitcond1_i_fu_401_p2 = (j_cast_i_fu_397_p1 == tmp_26_reg_504? 1'b1: 1'b0);

assign exitcond9_i_fu_275_p2 = (i_i_reg_211 == ap_const_lv2_3? 1'b1: 1'b0);

assign exitcond_i_fu_386_p2 = (i1_cast_i_fu_382_p1 == tmp_29_reg_534? 1'b1: 1'b0);

assign i1_cast_i_fu_382_p1 = i1_i_reg_223;

assign i_1_fu_391_p2 = (i1_i_reg_223 + ap_const_lv12_1);

assign i_fu_281_p2 = (i_i_reg_211 + ap_const_lv2_1);

assign j_cast_i_fu_397_p1 = j_i_reg_234;

assign j_fu_406_p2 = (j_i_reg_234 + ap_const_lv12_1);

assign m_axis_video_TDATA = AXI_video_strm_V_data_V_1_data_out;

assign m_axis_video_TDEST = AXI_video_strm_V_dest_V_1_data_out;

assign m_axis_video_TID = AXI_video_strm_V_id_V_1_data_out;

assign m_axis_video_TKEEP = AXI_video_strm_V_keep_V_1_data_out;

assign m_axis_video_TLAST = AXI_video_strm_V_last_V_1_data_out;

assign m_axis_video_TSTRB = AXI_video_strm_V_strb_V_1_data_out;

assign m_axis_video_TUSER = AXI_video_strm_V_user_V_1_data_out;

assign m_axis_video_TVALID = AXI_video_strm_V_dest_V_1_state[ap_const_lv1_0];

assign mapComp_address0 = tmp_8_cast_fu_296_p1;

assign map_0_V_cast_fu_326_p1 = mapComp_q0;

assign map_2_V_1_fu_350_p3 = ((sel_tmp2_fu_344_p2[0:0] === 1'b1) ? map_V_2_i_reg_175 : map_2_V_fu_336_p3);

assign map_2_V_2_fu_358_p3 = ((sel_tmp_fu_330_p2[0:0] === 1'b1) ? map_0_V_cast_fu_326_p1 : map_V_1_i_reg_187);

assign map_2_V_3_fu_366_p3 = ((sel_tmp2_fu_344_p2[0:0] === 1'b1) ? map_V_1_i_reg_187 : map_2_V_2_fu_358_p3);

assign map_2_V_5_fu_374_p3 = ((sel_tmp2_fu_344_p2[0:0] === 1'b1) ? map_0_V_cast_fu_326_p1 : map_2_V_4_reg_199);

assign map_2_V_fu_336_p3 = ((sel_tmp_fu_330_p2[0:0] === 1'b1) ? map_V_2_i_reg_175 : map_0_V_cast_fu_326_p1);

assign p_shl_cast_fu_261_p3 = {{tmp_28_fu_257_p1}, {ap_const_lv2_0}};

assign pix_val_0_V_fu_421_p1 = StrmMPix_V_val_V_dout[7:0];

assign pix_val_1_V_fu_425_p4 = {{StrmMPix_V_val_V_dout[ap_const_lv6_F : ap_const_lv6_8]}};

assign pix_val_2_V_fu_435_p4 = {{StrmMPix_V_val_V_dout[ap_const_lv6_17 : ap_const_lv6_10]}};

assign sel_tmp2_fu_344_p2 = (i_i_reg_211 == ap_const_lv2_0? 1'b1: 1'b0);

assign sel_tmp_fu_330_p2 = (i_i_reg_211 == ap_const_lv2_1? 1'b1: 1'b0);

assign tmp_25_fu_245_p1 = WidthOut_dout[11:0];

assign tmp_26_fu_249_p1 = WidthOut_dout[12:0];

assign tmp_27_fu_253_p1 = ColorMode_dout[4:0];

assign tmp_28_fu_257_p1 = ColorMode_dout[2:0];

assign tmp_29_fu_301_p1 = Height_read_reg_494[12:0];

assign tmp_30_fu_309_p1 = map_2_V_4_reg_199[1:0];

assign tmp_31_fu_313_p1 = map_V_1_i_reg_187[1:0];

assign tmp_32_fu_317_p1 = map_V_2_i_reg_175[1:0];

assign tmp_50_i_fu_304_p2 = ($signed(ap_const_lv12_FFF) + $signed(tmp_25_reg_499));

assign tmp_51_i_cast_fu_287_p1 = i_i_reg_211;

assign tmp_7_fu_269_p2 = (p_shl_cast_fu_261_p3 - tmp_27_fu_253_p1);

assign tmp_8_cast_fu_296_p1 = $signed(tmp_8_fu_291_p2);

assign tmp_8_fu_291_p2 = (tmp_7_reg_509 + tmp_51_i_cast_fu_287_p1);

assign tmp_data_V_fu_478_p4 = {{{tmp_2_fu_467_p5}, {tmp_s_fu_456_p5}}, {tmp_fu_445_p5}};


endmodule //bd_0_v_hscaler_0_v_hscaler_MultiPixStream2AXIvideo

